[levels]

UNSENT = 255

[formats]

#timed_string = "[%-5V] (%12c) %d()  %m (at %f:%U:%L)%n"
#debug_string = "[%-5V] (%12c) %m (at %f:%U:%L)%n"
timed_string = "[ %16c ] %d()  %m (at %f:%U:%L)%n"
debug_string = "[ %16c ] %m (at %f:%U:%L)%n"
unsent_JSON = "%m%n"

[rules]

Scheduler.DEBUG >stdout; debug_string
#Scheduler.DEBUG "log/debug.log", 10MB; debug_string
Scheduler.ERROR "log/error.log", 10MB; timed_string
Scheduler.FATAL "log/error.log", 10MB; timed_string

Storage.DEBUG >stdout; debug_string
#Storage.DEBUG "log/debug.log", 10MB; debug_string
Storage.ERROR "log/error.log", 10MB; timed_string
Storage.FATAL "log/error.log", 10MB; timed_string

Agent_.DEBUG >stdout; debug_string
#Agent_.DEBUG "log/debug.log", 10MB; debug_string
Agent_.ERROR "log/error.log", 10MB; timed_string
Agent_.FATAL "log/error.log", 10MB; timed_string

main.DEBUG >stdout; debug_string
#main.DEBUG "log/debug.log", 10MB; debug_string
main.ERROR "log/error.log", 10MB; timed_string
main.FATAL "log/error.log", 10MB; timed_string

Sender.DEBUG >stdout; debug_string
#Sender.ERROR "log/error.log", 10MB; timed_string
Sender.UNSENT "log/unsent", 2KB * 2; unsent_JSON